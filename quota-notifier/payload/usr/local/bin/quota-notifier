#!/usr/bin/env python
# Kahtan Al Jewary (aljewaryk@gmail.com) 2016
# Ricky Chilcott (chilcotr@ohio.edu) 2016

import subprocess
from subprocess import call
import os

def isNetworkAccount():
  try:
    dscl_command = "dscl /Active\ Directory/OHIO/All\ Domains/ -read /Users/$USER"
    output = subprocess.check_output(dscl_command, shell=True).strip()
    
  except subprocess.CalledProcessError, e:
    output = "eDSUnknownNodeName"
  
  if "eDSUnknownNodeName" in output:
    print "AD error encountered, or unknown user"
    return False
  else:
    return True 
    
def doesntHaveLocalHome():
  echo_command = "echo $HOME | grep '/Users/'"
  output = subprocess.check_output(echo_command, shell=True).strip()
  
  if output != "":
    print "Has local home"
    return False
  else:
    print "Doesn't have local home"
    return True 

def shouldCheckQuota():
  if doesntHaveLocalHome() and isNetworkAccount():
    return True
  else:
    return False

def diskUsage(path):
  command = "du -sh %s | awk \'{print $1}\'"  % path
  usage = subprocess.check_output(command, shell=True).replace("\n", "").strip()

  return(usage)
  
def diskHomeUsage():
  return diskUsage("$HOME")
  
# Will display an alert box with the specified message
def alert(message):
  command = "osascript -e \'tell app \"System Events\" to display dialog "
  command += "\"%s\" with title \"%s\" default button 1 buttons {\"OK\"} " %(message, title)
  command += "giving up after %s\'" % timeout
  call(command, shell=True)

# Will check the current usage and alert if needed
def checkUsageAndAlert(usage):
  denomination = usage[-1]
  value = float(usage[0:-1])
  
  if denomination != 'G' and denomination != 'T': # Not GB or TB.
    print "Less than 1 GB. Actually %s of usage." % usage
    return
  if denomination == 'T': # TERABYTES
    alert(over_quota_msg)
    return
  elif value <= softQuotaLimit:
    print "Below safe usage limit"
    return
  elif value < hardQuotaLimit:
    alert(close_to_quota_msg)
  else:
    alert(over_quota_msg)
  
  exit(0)

if shouldCheckQuota():
  usage = diskHomeUsage()
else:
  exit(1)
# ============================
# Variables to change
# ============================

timeout = "150" #seconds (i.e. 2.5 mins)
title = "Home Usage Alert"
hardQuotaLimit = int(os.getenv('HARD_QUOTA', 10)) # GB
softQuotaLimit = int(os.getenv('SOFT_QUOTA', 8)) # GB

close_to_quota_msg = "You are getting close to your %sG home drive quota. You are currently using %s." % (hardQuotaLimit, usage)
over_quota_msg = "You are over your %sG home drive quota. Currently, you are using %s. Delete files immediately and empty trash to continue using this computer." % (hardQuotaLimit, usage)

checkUsageAndAlert(usage)